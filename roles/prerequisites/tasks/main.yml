- name : "Install dependancies"
  become: yes
  become_user: root
  apt:
    pkg: ['postgresql-13-postgis-3', 'postgis', 'postgresql-contrib', 'supervisor', 'curl', 'git']
    update_cache: yes
    state: present
  when: ansible_distribution_release == "bullseye"

- name : "Install python3 dependencies"
  become: yes
  become_user: root
  apt: 
    pkg: ['python3', 'python3-dev', 'python3-setuptools', 'python3-pip', 'python3-virtualenv', 'python3-venv', 'libpq-dev', 'python3-psycopg2']
    state: present
    update_cache: yes
  when: ansible_distribution_release == "bullseye"

- name: check if nodejs is already installed
  package_facts:
    manager: auto

- name: get nodejs src
  become: true
  become_user: "{{ user.name }}"
  shell: "cd /home/{{ user.name }} && curl -fsSL https://deb.nodesource.com/setup_{{ prerequisite.node.nodejs }}.x | bash -"
  when: "'nodejs' not in ansible_facts.packages"

- name : install nodejs
  become: yes
  become_user: root
  apt:
    pkg: nodejs
    state: present
    update_cache: yes
  when: "'nodejs' not in ansible_facts.packages"

- name: Install nvm
  shell: >
    curl https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | sh
    creates=/home/synthese/.nvm/nvm.sh

- name: install apache2
  become: yes
  become_user: root
  apt:
    pkg: apache2
    state: present

- name: install virtualenv from pip
  become: yes
  become_user: root
  pip:
    name: virtualenv==20.0.1

- name : check if git project exists
  stat: 
    path: "/home/ {{ prerequisite.user.name }} /usershub"
  register: usershub_folder

- name: clone git project
  when: not usershub_folder.stat.exists
  git:
    repo: "{{ prerequisite.git.url }}"
    dest: "~/usershub"
    version: "{{ prerequisite.git.release }}"
    recursive: yes
    track_submodules: yes